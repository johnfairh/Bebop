[
  {
    "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Empty.swift" : {
      "key.bb.module_name" : "SpmSwiftModule",
      "key.bb.pass_index" : 0,
      "key.bb.version" : "1.0",
      "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
      "key.length" : 0,
      "key.offset" : 0
    }
  },
  {
    "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift" : {
      "key.bb.module_name" : "SpmSwiftModule",
      "key.bb.pass_index" : 0,
      "key.bb.version" : "1.0",
      "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
      "key.length" : 1146,
      "key.offset" : 0,
      "key.substructure" : [
        {
          "key.accessibility" : "source.lang.swift.accessibility.internal",
          "key.annotated_decl" : "<Declaration>class GenericBase&lt;T&gt;<\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "class GenericBase<T>",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "class "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "GenericBase"
            }
          ],
          "key.bodylength" : 100,
          "key.bodyoffset" : 22,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GenericBase<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
          "key.kind" : "source.lang.swift.decl.class",
          "key.length" : 123,
          "key.name" : "GenericBase",
          "key.namelength" : 11,
          "key.nameoffset" : 6,
          "key.offset" : 0,
          "key.parsed_declaration" : "class GenericBase<T>",
          "key.parsed_scope.end" : 10,
          "key.parsed_scope.start" : 1,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>T<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "T"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind" : "source.lang.swift.decl.generic_type_param",
              "key.length" : 1,
              "key.name" : "T",
              "key.namelength" : 1,
              "key.nameoffset" : 18,
              "key.offset" : 18,
              "key.parsed_declaration" : "class GenericBase<T",
              "key.parsed_scope.end" : 1,
              "key.parsed_scope.start" : 1,
              "key.typename" : "T.Type",
              "key.typeusr" : "$sxmD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseC1Txmfp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>var boxed: <Type usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var boxed: T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "boxed"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": T"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>boxed<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 12,
              "key.name" : "boxed",
              "key.namelength" : 5,
              "key.nameoffset" : 29,
              "key.offset" : 25,
              "key.parsed_declaration" : "var boxed: T",
              "key.parsed_scope.end" : 2,
              "key.parsed_scope.start" : 2,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "T",
              "key.typeusr" : "$sxD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseC5boxedxvp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>init(type: <Type usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/Type>)<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "init(type: T)",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "init"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "type"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": T)"
                }
              ],
              "key.bodylength" : 20,
              "key.bodyoffset" : 55,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>type<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 36,
              "key.name" : "init(type:)",
              "key.namelength" : 13,
              "key.nameoffset" : 40,
              "key.offset" : 40,
              "key.parsed_declaration" : "init(type: T)",
              "key.parsed_scope.end" : 5,
              "key.parsed_scope.start" : 3,
              "key.typename" : "<T> (GenericBase<T>.Type) -> (T) -> GenericBase<T>",
              "key.typeusr" : "$s4type14SpmSwiftModule11GenericBaseCyxGx_tcD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseC4typeACyxGx_tcfc"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>func mutify() -&gt; <Type usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func mutify() -> T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "mutify"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "() -> T"
                }
              ],
              "key.bodylength" : 20,
              "key.bodyoffset" : 100,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>mutify<\/decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 41,
              "key.name" : "mutify()",
              "key.namelength" : 8,
              "key.nameoffset" : 85,
              "key.offset" : 80,
              "key.parsed_declaration" : "func mutify() -> T",
              "key.parsed_scope.end" : 9,
              "key.parsed_scope.start" : 7,
              "key.typename" : "<T> (GenericBase<T>) -> () -> T",
              "key.typeusr" : "$sxycD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseC6mutifyxyF"
            }
          ],
          "key.typename" : "GenericBase<T>.Type",
          "key.typeusr" : "$s14SpmSwiftModule11GenericBaseCyxGmD",
          "key.usr" : "s:14SpmSwiftModule11GenericBaseC"
        },
        {
          "key.annotated_decl" : "<Declaration>class GenericBase&lt;T&gt;<\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension GenericBase where T: Codable",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "GenericBase"
            }
          ],
          "key.bodylength" : 70,
          "key.bodyoffset" : 165,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GenericBase<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 111,
          "key.name" : "GenericBase",
          "key.namelength" : 11,
          "key.nameoffset" : 135,
          "key.offset" : 125,
          "key.parsed_declaration" : "extension GenericBase where T: Codable",
          "key.parsed_scope.end" : 17,
          "key.parsed_scope.start" : 12,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>var codableCount: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var codableCount: Int { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "codableCount"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 191,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>codableCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 41,
              "key.name" : "codableCount",
              "key.namelength" : 12,
              "key.nameoffset" : 172,
              "key.offset" : 168,
              "key.parsed_declaration" : "var codableCount: Int",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 13,
              "key.typename" : "Int",
              "key.typeusr" : "$sSiD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseCAASeRzSERzlE12codableCountSivp"
            },
            {
              "key.annotated_decl" : "<Declaration>func doCodability()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func doCodability()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "doCodability"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 233,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doCodability<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 22,
              "key.name" : "doCodability()",
              "key.namelength" : 14,
              "key.nameoffset" : 217,
              "key.offset" : 212,
              "key.parsed_declaration" : "func doCodability()",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.typename" : "<T where T : Decodable, T : Encodable> (GenericBase<T>) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseCAASeRzSERzlE12doCodabilityyyF"
            }
          ],
          "key.typename" : "GenericBase<T>.Type",
          "key.typeusr" : "$s14SpmSwiftModule11GenericBaseCyxGmD",
          "key.usr" : "s:14SpmSwiftModule11GenericBaseC"
        },
        {
          "key.annotated_decl" : "<Declaration>class GenericBase&lt;T&gt;<\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension GenericBase\nwhere\n    T: Equatable,\n    T: FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "GenericBase"
            }
          ],
          "key.bodylength" : 51,
          "key.bodyoffset" : 326,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GenericBase<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 140,
          "key.name" : "GenericBase",
          "key.namelength" : 11,
          "key.nameoffset" : 248,
          "key.offset" : 238,
          "key.parsed_declaration" : "extension GenericBase where T: Equatable,\n                            T: FirstProtocol",
          "key.parsed_scope.end" : 24,
          "key.parsed_scope.start" : 19,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func doFirstMagic()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func doFirstMagic()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "doFirstMagic"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 350,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doFirstMagic<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 22,
              "key.name" : "doFirstMagic()",
              "key.namelength" : 14,
              "key.nameoffset" : 334,
              "key.offset" : 329,
              "key.parsed_declaration" : "func doFirstMagic()",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.typename" : "<T where T : FirstProtocol, T : Equatable> (GenericBase<T>) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseCA2A13FirstProtocolRzSQRzlE02doF5MagicyyF"
            },
            {
              "key.annotated_decl" : "<Declaration>func doMoreMagic()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func doMoreMagic()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "doMoreMagic"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 375,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doMoreMagic<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 21,
              "key.name" : "doMoreMagic()",
              "key.namelength" : 13,
              "key.nameoffset" : 360,
              "key.offset" : 355,
              "key.parsed_declaration" : "func doMoreMagic()",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 23,
              "key.typename" : "<T where T : FirstProtocol, T : Equatable> (GenericBase<T>) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseCA2A13FirstProtocolRzSQRzlE11doMoreMagicyyF"
            }
          ],
          "key.typename" : "GenericBase<T>.Type",
          "key.typeusr" : "$s14SpmSwiftModule11GenericBaseCyxGmD",
          "key.usr" : "s:14SpmSwiftModule11GenericBaseC"
        },
        {
          "key.annotated_decl" : "<Declaration>class GenericBase&lt;T&gt;<\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension GenericBase where T: Hashable",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "GenericBase"
            }
          ],
          "key.bodylength" : 52,
          "key.bodyoffset" : 421,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GenericBase<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 94,
          "key.name" : "GenericBase",
          "key.namelength" : 11,
          "key.nameoffset" : 390,
          "key.offset" : 380,
          "key.parsed_declaration" : "extension GenericBase where T: Hashable",
          "key.parsed_scope.end" : 29,
          "key.parsed_scope.start" : 26,
          "key.substructure" : [
            {
              "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
              "key.length" : 22,
              "key.name" : "MARK: User-custom mark",
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 427
            },
            {
              "key.annotated_decl" : "<Declaration>func doHashable()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func doHashable()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "doHashable"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 471,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>doHashable<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 20,
              "key.name" : "doHashable()",
              "key.namelength" : 12,
              "key.nameoffset" : 457,
              "key.offset" : 452,
              "key.parsed_declaration" : "func doHashable()",
              "key.parsed_scope.end" : 28,
              "key.parsed_scope.start" : 28,
              "key.typename" : "<T where T : Hashable> (GenericBase<T>) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule11GenericBaseCAASHRzlE10doHashableyyF"
            }
          ],
          "key.typename" : "GenericBase<T>.Type",
          "key.typeusr" : "$s14SpmSwiftModule11GenericBaseCyxGmD",
          "key.usr" : "s:14SpmSwiftModule11GenericBaseC"
        },
        {
          "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
          "key.length" : 29,
          "key.name" : "MARK: CustomStringConvertible",
          "key.namelength" : 0,
          "key.nameoffset" : 0,
          "key.offset" : 479
        },
        {
          "key.annotated_decl" : "<Declaration>class GenericBase&lt;T&gt;<\/Declaration>",
          "key.bb.inherited_types" : [
            {
              "key.bb.type_name" : "CustomStringConvertible"
            }
          ],
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension GenericBase: CustomStringConvertible",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "GenericBase"
            }
          ],
          "key.bodylength" : 47,
          "key.bodyoffset" : 558,
          "key.elements" : [
            {
              "key.kind" : "source.lang.swift.structure.elem.typeref",
              "key.length" : 23,
              "key.offset" : 533
            }
          ],
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GenericBase<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule11GenericBaseC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.class>",
          "key.inheritedtypes" : [
            {
              "key.name" : "CustomStringConvertible"
            }
          ],
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 97,
          "key.name" : "GenericBase",
          "key.namelength" : 11,
          "key.nameoffset" : 519,
          "key.offset" : 509,
          "key.parsed_declaration" : "extension GenericBase : CustomStringConvertible",
          "key.parsed_scope.end" : 36,
          "key.parsed_scope.start" : 32,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "A textual representation of this instance."
                },
                "key.bb.discussion" : {
                  "en" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:\n\n``` swift\nstruct Point: CustomStringConvertible {\n    let x: Int, y: Int\n\n    var description: String {\n        return \"(\\(x), \\(y))\"\n    }\n}\n\nlet p = Point(x: 21, y: 30)\nlet s = String(describing: p)\nprint(s)\n\/\/ Prints \"(21, 30)\"\n\n```\n\nThe conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                },
                "key.bb.doc_source" : "inherited"
              },
              "key.bb.is_override" : true,
              "key.bb.swift_declaration" : "var description: String { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "description"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 586,
              "key.doc.declaration" : "var description: String { get }",
              "key.doc.discussion" : [
                {
                  "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
                },
                {
                  "CodeListing" : ""
                },
                {
                  "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
                },
                {
                  "Note" : ""
                }
              ],
              "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
              "key.doc.name" : "description",
              "key.doc.type" : "Other",
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 43,
              "key.name" : "description",
              "key.namelength" : 11,
              "key.nameoffset" : 565,
              "key.offset" : 561,
              "key.overrides" : [
                {
                  "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
                }
              ],
              "key.parsed_declaration" : "var description: String",
              "key.parsed_scope.end" : 35,
              "key.parsed_scope.start" : 33,
              "key.typename" : "String",
              "key.typeusr" : "$sSSD",
              "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
            }
          ],
          "key.typename" : "GenericBase<T>.Type",
          "key.typeusr" : "$s14SpmSwiftModule11GenericBaseCyxGmD",
          "key.usr" : "s:14SpmSwiftModule11GenericBaseC"
        },
        {
          "key.annotated_decl" : "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript."
            },
            "key.bb.doc_source" : "inherited"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension Collection where Element: FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "Collection"
            }
          ],
          "key.bb.type_module_name" : "Swift",
          "key.bodylength" : 26,
          "key.bodyoffset" : 659,
          "key.doc.declaration" : "protocol Collection : Sequence",
          "key.doc.discussion" : [
            {
              "Para" : "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para" : "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para" : "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para" : "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para" : "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para" : "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para" : "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para" : "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para" : "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number" : ""
            },
            {
              "Para" : "Here’s an implementation of those steps:"
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para" : "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para" : "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet" : ""
            },
            {
              "Para" : "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para" : "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml" : "<Class><Name>Collection<\/Name><USR>s:Sl<\/USR><Declaration>protocol Collection : Sequence<\/Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.<\/Para><\/Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection<\/codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence<\/codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.<\/Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstSpace<\/codeVoice> constant is an index into the <codeVoice>text<\/codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace<\/codeVoice> is used to extract the prefix that contains elements up to that index.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Individual Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex<\/codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.<\/Para><Para>Here’s an example of accessing the first character in a string through its subscript:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"B\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Collection<\/codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text<\/codeVoice> using the <codeVoice>first<\/codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil<\/codeVoice> if the collection is empty.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"B\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex<\/codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex<\/codeVoice> property. All other values of the <codeVoice>Index<\/codeVoice> type, such as the <codeVoice>startIndex<\/codeVoice> property of a different collection, are invalid indices for this collection.<\/Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection<\/codeVoice> and <codeVoice>RangeReplaceableCollection<\/codeVoice> protocols, as well as for the specific type you’re using.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)<\/codeVoice> or <codeVoice>suffix(_:)<\/codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.<\/Para><Para>The following example creates a <codeVoice>firstWord<\/codeVoice> constant by using the <codeVoice>prefix(while:)<\/codeVoice> method to get a slice of the <codeVoice>text<\/codeVoice> string.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The retrieved slice of <codeVoice>text<\/codeVoice> is equivalent in each of these cases.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Share Indices<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.<\/Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:<\/Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences<\/codeVoice> array that holds the second half of the days.<\/Para><\/Item><Item><Para>Use the <codeVoice>max(by:)<\/codeVoice> method to determine the index of the day with the most absences.<\/Para><\/Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences<\/codeVoice> array.<\/Para><\/Item><\/List-Number><Para>Here’s an implementation of those steps:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count \/ 2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Highest second-half absences: 3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.<\/Para><Para>For example, if you update the last element of the <codeVoice>absences<\/codeVoice> array from <codeVoice>0<\/codeVoice> to <codeVoice>2<\/codeVoice>, the <codeVoice>secondHalf<\/codeVoice> slice is unchanged.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 3, 1, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Traversing a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass<\/emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)<\/codeVoice> method to test whether a collection includes an element.<\/Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters<\/codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection<\/codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection<\/codeVoice> conformance to your type, you must declare at least the following requirements:<\/Para><List-Bullet><Item><Para>The <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties<\/Para><\/Item><Item><Para>A subscript that provides at least read-only access to your type’s elements<\/Para><\/Item><Item><Para>The <codeVoice>index(after:)<\/codeVoice> method for advancing an index into your collection<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Types that conform to <codeVoice>Collection<\/codeVoice> are expected to provide the <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.<\/Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count<\/codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count<\/codeVoice> property is an O(<emphasis>n<\/emphasis>) operation.<\/Para><\/Discussion><\/CommentParts><\/Class>",
          "key.doc.name" : "Collection",
          "key.doc.type" : "Class",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Collection<\/decl.name> : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.protocol>",
          "key.groupname" : "Collection",
          "key.is_system" : true,
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 78,
          "key.modulename" : "Swift",
          "key.name" : "Collection",
          "key.namelength" : 10,
          "key.nameoffset" : 618,
          "key.offset" : 608,
          "key.parsed_declaration" : "extension Collection where Element: FirstProtocol",
          "key.parsed_scope.end" : 40,
          "key.parsed_scope.start" : 38,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func collectEmAll()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func collectEmAll()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "collectEmAll"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 683,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectEmAll<\/decl.name>()<\/decl.function.method.instance>",
              "key.groupname" : "Collection",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 22,
              "key.name" : "collectEmAll()",
              "key.namelength" : 14,
              "key.nameoffset" : 667,
              "key.offset" : 662,
              "key.parsed_declaration" : "func collectEmAll()",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 39,
              "key.typename" : "<Self where Self : Collection, Self.Element : FirstProtocol> (Self) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:Sl14SpmSwiftModuleAA13FirstProtocol7ElementRpzrlE12collectEmAllyyF"
            }
          ],
          "key.typename" : "Collection.Protocol",
          "key.typeusr" : "$sSl_pmD",
          "key.usr" : "s:Sl"
        },
        {
          "key.annotated_decl" : "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript."
            },
            "key.bb.doc_source" : "inherited"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension Collection where Element == SpmSwiftModule.Nested1",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "Collection"
            }
          ],
          "key.bb.type_module_name" : "Swift",
          "key.bodylength" : 23,
          "key.bodyoffset" : 750,
          "key.doc.declaration" : "protocol Collection : Sequence",
          "key.doc.discussion" : [
            {
              "Para" : "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
            },
            {
              "Para" : "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
            },
            {
              "Para" : "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
            },
            {
              "Para" : "Here’s an example of accessing the first character in a string through its subscript:"
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
            },
            {
              "Para" : "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
            },
            {
              "Para" : "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
            },
            {
              "Para" : "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "The retrieved slice of `text` is equivalent in each of these cases."
            },
            {
              "Para" : "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
            },
            {
              "Para" : "For example, suppose you have an array holding the number of absences from each class during a session."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
            },
            {
              "List-Number" : ""
            },
            {
              "Para" : "Here’s an implementation of those steps:"
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
            },
            {
              "Para" : "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
            },
            {
              "Para" : "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
            },
            {
              "CodeListing" : ""
            },
            {
              "Para" : "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
            },
            {
              "List-Bullet" : ""
            },
            {
              "Para" : "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
            },
            {
              "Para" : "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
            }
          ],
          "key.doc.full_as_xml" : "<Class><Name>Collection<\/Name><USR>s:Sl<\/USR><Declaration>protocol Collection : Sequence<\/Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.<\/Para><\/Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection<\/codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence<\/codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.<\/Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstSpace<\/codeVoice> constant is an index into the <codeVoice>text<\/codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace<\/codeVoice> is used to extract the prefix that contains elements up to that index.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Individual Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex<\/codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.<\/Para><Para>Here’s an example of accessing the first character in a string through its subscript:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"B\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Collection<\/codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text<\/codeVoice> using the <codeVoice>first<\/codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil<\/codeVoice> if the collection is empty.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"B\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex<\/codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex<\/codeVoice> property. All other values of the <codeVoice>Index<\/codeVoice> type, such as the <codeVoice>startIndex<\/codeVoice> property of a different collection, are invalid indices for this collection.<\/Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection<\/codeVoice> and <codeVoice>RangeReplaceableCollection<\/codeVoice> protocols, as well as for the specific type you’re using.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)<\/codeVoice> or <codeVoice>suffix(_:)<\/codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.<\/Para><Para>The following example creates a <codeVoice>firstWord<\/codeVoice> constant by using the <codeVoice>prefix(while:)<\/codeVoice> method to get a slice of the <codeVoice>text<\/codeVoice> string.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The retrieved slice of <codeVoice>text<\/codeVoice> is equivalent in each of these cases.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Share Indices<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.<\/Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:<\/Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences<\/codeVoice> array that holds the second half of the days.<\/Para><\/Item><Item><Para>Use the <codeVoice>max(by:)<\/codeVoice> method to determine the index of the day with the most absences.<\/Para><\/Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences<\/codeVoice> array.<\/Para><\/Item><\/List-Number><Para>Here’s an implementation of those steps:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count \/ 2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Highest second-half absences: 3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.<\/Para><Para>For example, if you update the last element of the <codeVoice>absences<\/codeVoice> array from <codeVoice>0<\/codeVoice> to <codeVoice>2<\/codeVoice>, the <codeVoice>secondHalf<\/codeVoice> slice is unchanged.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 3, 1, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Traversing a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass<\/emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)<\/codeVoice> method to test whether a collection includes an element.<\/Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters<\/codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection<\/codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection<\/codeVoice> conformance to your type, you must declare at least the following requirements:<\/Para><List-Bullet><Item><Para>The <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties<\/Para><\/Item><Item><Para>A subscript that provides at least read-only access to your type’s elements<\/Para><\/Item><Item><Para>The <codeVoice>index(after:)<\/codeVoice> method for advancing an index into your collection<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Types that conform to <codeVoice>Collection<\/codeVoice> are expected to provide the <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.<\/Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count<\/codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count<\/codeVoice> property is an O(<emphasis>n<\/emphasis>) operation.<\/Para><\/Discussion><\/CommentParts><\/Class>",
          "key.doc.name" : "Collection",
          "key.doc.type" : "Class",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Collection<\/decl.name> : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.protocol>",
          "key.groupname" : "Collection",
          "key.is_system" : true,
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 86,
          "key.modulename" : "Swift",
          "key.name" : "Collection",
          "key.namelength" : 10,
          "key.nameoffset" : 698,
          "key.offset" : 688,
          "key.parsed_declaration" : "extension Collection where Element == SpmSwiftModule.Nested1",
          "key.parsed_scope.end" : 44,
          "key.parsed_scope.start" : 42,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func nestEmAll()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func nestEmAll()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "nestEmAll"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 771,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>nestEmAll<\/decl.name>()<\/decl.function.method.instance>",
              "key.groupname" : "Collection",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 19,
              "key.name" : "nestEmAll()",
              "key.namelength" : 11,
              "key.nameoffset" : 758,
              "key.offset" : 753,
              "key.parsed_declaration" : "func nestEmAll()",
              "key.parsed_scope.end" : 43,
              "key.parsed_scope.start" : 43,
              "key.typename" : "<Self where Self : Collection, Self.Element == SpmSwiftModule.Nested1> (Self) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:Sl14SpmSwiftModuleA2AV7Nested1V7ElementRtzrlE9nestEmAllyyF"
            }
          ],
          "key.typename" : "Collection.Protocol",
          "key.typeusr" : "$sSl_pmD",
          "key.usr" : "s:Sl"
        },
        {
          "key.annotated_decl" : "<Declaration>public protocol FirstProtocol<\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A protocol."
            },
            "key.bb.doc_source" : "inherited"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension FirstProtocol where AssocType: Hashable",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "FirstProtocol"
            }
          ],
          "key.bodylength" : 142,
          "key.bodyoffset" : 827,
          "key.doc.column" : 17,
          "key.doc.declaration" : "public protocol FirstProtocol",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"2\" column=\"17\"><Name>FirstProtocol<\/Name><USR>s:14SpmSwiftModule13FirstProtocolP<\/USR><Declaration>public protocol FirstProtocol<\/Declaration><CommentParts><Abstract><Para>A protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 2,
          "key.doc.name" : "FirstProtocol",
          "key.doc.type" : "Class",
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FirstProtocol<\/decl.name><\/decl.protocol>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 194,
          "key.name" : "FirstProtocol",
          "key.namelength" : 13,
          "key.nameoffset" : 786,
          "key.offset" : 776,
          "key.parsed_declaration" : "extension FirstProtocol where AssocType: Hashable",
          "key.parsed_scope.end" : 53,
          "key.parsed_scope.start" : 46,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func extHashableMethod()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func extHashableMethod()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "extHashableMethod"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 856,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>extHashableMethod<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 27,
              "key.name" : "extHashableMethod()",
              "key.namelength" : 19,
              "key.nameoffset" : 835,
              "key.offset" : 830,
              "key.parsed_declaration" : "func extHashableMethod()",
              "key.parsed_scope.end" : 47,
              "key.parsed_scope.start" : 47,
              "key.typename" : "<Self where Self : FirstProtocol, Self.AssocType : Hashable> (Self) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolPAASH9AssocTypeRpzrlE17extHashableMethodyyF"
            },
            {
              "key.annotated_decl" : "<Declaration>func m(arg: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "Special default implementation for m in Hashable case."
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func m(arg: Int) -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "m"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 950,
              "key.doc.column" : 8,
              "key.doc.comment" : "Special default implementation for m in Hashable case.",
              "key.doc.declaration" : "func m(arg: Int) -> String",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift\" line=\"50\" column=\"8\"><Name>m(arg:)<\/Name><USR>s:14SpmSwiftModule13FirstProtocolPAASH9AssocTypeRpzrlE1m3argSSSi_tF<\/USR><Declaration>func m(arg: Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Special default implementation for m in Hashable case.<\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 50,
              "key.doc.name" : "m(arg:)",
              "key.doc.type" : "Function",
              "key.doclength" : 59,
              "key.docoffset" : 861,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>m<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>arg<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 46,
              "key.name" : "m(arg:)",
              "key.namelength" : 11,
              "key.nameoffset" : 927,
              "key.offset" : 922,
              "key.parsed_declaration" : "func m(arg: Int) -> String",
              "key.parsed_scope.end" : 52,
              "key.parsed_scope.start" : 50,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolP1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolPAAE1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                }
              ],
              "key.typename" : "<Self where Self : FirstProtocol, Self.AssocType : Hashable> (Self) -> (Int) -> String",
              "key.typeusr" : "$s3argSSSi_tcD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolPAASH9AssocTypeRpzrlE1m3argSSSi_tF"
            }
          ],
          "key.typename" : "FirstProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule13FirstProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule13FirstProtocolP"
        },
        {
          "key.annotated_decl" : "<Declaration>typealias Element = <Type usr=\"s:SJ\">Character<\/Type><\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "Extension of a nested type from an external module"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : true,
          "key.bb.swift_declaration" : "extension String.Element",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "String.Element"
            }
          ],
          "key.bb.type_module_name" : "Swift",
          "key.bodylength" : 91,
          "key.bodyoffset" : 1053,
          "key.doc.comment" : "Extension of a nested type from an external module",
          "key.doc.declaration" : "associatedtype Element where Self.Element == Self.Iterator.Element",
          "key.doc.discussion" : [
            {
              "Note" : ""
            }
          ],
          "key.doc.full_as_xml" : "<Other><Name>Element<\/Name><USR>s:ST7ElementQa<\/USR><Declaration>associatedtype Element where Self.Element == Self.Iterator.Element<\/Declaration><CommentParts><Abstract><Para>A type representing the sequence’s elements.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Sequence<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
          "key.doc.name" : "Element",
          "key.doc.type" : "Other",
          "key.doclength" : 55,
          "key.docoffset" : 972,
          "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Element<\/decl.name> = <ref.struct usr=\"s:SJ\">Character<\/ref.struct><\/decl.typealias>",
          "key.groupname" : "String",
          "key.is_system" : true,
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 118,
          "key.modulename" : "Swift",
          "key.name" : "String.Element",
          "key.namelength" : 14,
          "key.nameoffset" : 1037,
          "key.offset" : 1027,
          "key.overrides" : [
            {
              "key.usr" : "s:SK7ElementQa"
            },
            {
              "key.usr" : "s:Sl7ElementQa"
            },
            {
              "key.usr" : "s:ST7ElementQa"
            }
          ],
          "key.parsed_declaration" : "extension String.Element",
          "key.parsed_scope.end" : 61,
          "key.parsed_scope.start" : 56,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func method1()<\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "documented method"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func method1()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "method1"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 1097,
              "key.doc.column" : 8,
              "key.doc.comment" : "documented method",
              "key.doc.declaration" : "func method1()",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift\" line=\"58\" column=\"8\"><Name>method1()<\/Name><USR>s:SJ14SpmSwiftModuleE7method1yyF<\/USR><Declaration>func method1()<\/Declaration><CommentParts><Abstract><Para>documented method<\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 58,
              "key.doc.name" : "method1()",
              "key.doc.type" : "Function",
              "key.doclength" : 22,
              "key.docoffset" : 1057,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>method1<\/decl.name>()<\/decl.function.method.instance>",
              "key.groupname" : "String",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 17,
              "key.name" : "method1()",
              "key.namelength" : 9,
              "key.nameoffset" : 1086,
              "key.offset" : 1081,
              "key.parsed_declaration" : "func method1()",
              "key.parsed_scope.end" : 58,
              "key.parsed_scope.start" : 58,
              "key.typename" : "(Character) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:SJ14SpmSwiftModuleE7method1yyF"
            },
            {
              "key.annotated_decl" : "<Declaration>func method2()<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func method2()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "method2"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 1142,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Extensions.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>method2<\/decl.name>()<\/decl.function.method.instance>",
              "key.groupname" : "String",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 17,
              "key.name" : "method2()",
              "key.namelength" : 9,
              "key.nameoffset" : 1131,
              "key.offset" : 1126,
              "key.parsed_declaration" : "func method2()",
              "key.parsed_scope.end" : 60,
              "key.parsed_scope.start" : 60,
              "key.typename" : "(Character) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:SJ14SpmSwiftModuleE7method2yyF"
            }
          ],
          "key.typename" : "Character.Type",
          "key.typeusr" : "$sSJmD",
          "key.usr" : "s:ST7ElementQa"
        }
      ]
    }
  },
  {
    "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift" : {
      "key.bb.module_name" : "SpmSwiftModule",
      "key.bb.pass_index" : 0,
      "key.bb.version" : "1.0",
      "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
      "key.length" : 892,
      "key.offset" : 0,
      "key.substructure" : [
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public protocol FirstProtocol<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 16
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A protocol."
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public protocol FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "protocol "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "FirstProtocol"
            }
          ],
          "key.bodylength" : 240,
          "key.bodyoffset" : 47,
          "key.doc.column" : 17,
          "key.doc.comment" : "A protocol.",
          "key.doc.declaration" : "public protocol FirstProtocol",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"2\" column=\"17\"><Name>FirstProtocol<\/Name><USR>s:14SpmSwiftModule13FirstProtocolP<\/USR><Declaration>public protocol FirstProtocol<\/Declaration><CommentParts><Abstract><Para>A protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 2,
          "key.doc.name" : "FirstProtocol",
          "key.doc.type" : "Class",
          "key.doclength" : 16,
          "key.docoffset" : 0,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FirstProtocol<\/decl.name><\/decl.protocol>",
          "key.kind" : "source.lang.swift.decl.protocol",
          "key.length" : 265,
          "key.name" : "FirstProtocol",
          "key.namelength" : 13,
          "key.nameoffset" : 32,
          "key.offset" : 23,
          "key.parsed_declaration" : "public protocol FirstProtocol",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 2,
          "key.substructure" : [
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>func m(arg: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "Brief note about m"
                },
                "key.bb.discussion" : {
                  "en" : "What m is all about."
                },
                "key.bb.doc_source" : "docComment",
                "key.bb.parameters" : [
                  {
                    "key.bb.param_desc" : {
                      "en" : "The argument"
                    },
                    "key.bb.param_name" : "arg"
                  }
                ],
                "key.bb.returns" : {
                  "en" : "The answer"
                }
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func m(arg: Int) -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "m"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.doc.column" : 8,
              "key.doc.comment" : "Brief note about m\n\nWhat m is all about.\n- parameter arg: The argument\n- returns: The answer",
              "key.doc.declaration" : "func m(arg: Int) -> String",
              "key.doc.discussion" : [
                {
                  "Para" : "What m is all about."
                }
              ],
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"8\" column=\"8\"><Name>m(arg:)<\/Name><USR>s:14SpmSwiftModule13FirstProtocolP1m3argSSSi_tF<\/USR><Declaration>func m(arg: Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Brief note about m<\/Para><\/Abstract><Parameters><Parameter><Name>arg<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The argument<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>The answer<\/Para><\/ResultDiscussion><Discussion><Para>What m is all about.<\/Para><\/Discussion><\/CommentParts><\/Function>",
              "key.doc.line" : 8,
              "key.doc.name" : "m(arg:)",
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "Para" : "The argument"
                    }
                  ],
                  "name" : "arg"
                }
              ],
              "key.doc.result_discussion" : [
                {
                  "Para" : "The answer"
                }
              ],
              "key.doc.type" : "Function",
              "key.doclength" : 120,
              "key.docoffset" : 50,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>m<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>arg<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 26,
              "key.name" : "m(arg:)",
              "key.namelength" : 11,
              "key.nameoffset" : 177,
              "key.offset" : 172,
              "key.parsed_declaration" : "func m(arg: Int) -> String",
              "key.parsed_scope.end" : 8,
              "key.parsed_scope.start" : 8,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolPAASH9AssocTypeRpzrlE1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolPAAE1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                }
              ],
              "key.typename" : "<Self where Self : FirstProtocol> (Self) -> (Int) -> String",
              "key.typeusr" : "$s3argSSSi_tcD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolP1m3argSSSi_tF"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>associatedtype AssocType<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "associatedtype AssocType",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "associatedtype "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "AssocType"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>AssocType<\/decl.name><\/decl.associatedtype>",
              "key.kind" : "source.lang.swift.decl.associatedtype",
              "key.length" : 24,
              "key.name" : "AssocType",
              "key.namelength" : 9,
              "key.nameoffset" : 217,
              "key.offset" : 202,
              "key.parsed_declaration" : "associatedtype AssocType",
              "key.parsed_scope.end" : 10,
              "key.parsed_scope.start" : 10,
              "key.typename" : "Self.AssocType.Type",
              "key.typeusr" : "$s9AssocType14SpmSwiftModule13FirstProtocolPQzmD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolP9AssocTypeQa"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>func assocFunc() -&gt; <Type usr=\"s:14SpmSwiftModule13FirstProtocolP9AssocTypeQa\">AssocType<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func assocFunc() -> AssocType",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "assocFunc"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "() -> AssocType"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>assocFunc<\/decl.name>() -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14SpmSwiftModule13FirstProtocolP9AssocTypeQa\">AssocType<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 29,
              "key.name" : "assocFunc()",
              "key.namelength" : 11,
              "key.nameoffset" : 234,
              "key.offset" : 229,
              "key.parsed_declaration" : "func assocFunc() -> AssocType",
              "key.parsed_scope.end" : 11,
              "key.parsed_scope.start" : 11,
              "key.typename" : "<Self where Self : FirstProtocol> (Self) -> () -> Self.AssocType",
              "key.typeusr" : "$s9AssocTypeQzycD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolP9assocFunc9AssocTypeQzyF"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>var getOnly: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var getOnly: Int { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "getOnly"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int"
                }
              ],
              "key.bodylength" : 5,
              "key.bodyoffset" : 280,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>getOnly<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 24,
              "key.name" : "getOnly",
              "key.namelength" : 7,
              "key.nameoffset" : 266,
              "key.offset" : 262,
              "key.parsed_declaration" : "var getOnly: Int",
              "key.parsed_scope.end" : 13,
              "key.parsed_scope.start" : 13,
              "key.typename" : "Int",
              "key.typeusr" : "$sSiD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolP7getOnlySivp"
            }
          ],
          "key.typename" : "FirstProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule13FirstProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule13FirstProtocolP"
        },
        {
          "key.annotated_decl" : "<Declaration>public protocol FirstProtocol<\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A protocol."
            },
            "key.bb.doc_source" : "inherited"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "FirstProtocol"
            }
          ],
          "key.bodylength" : 49,
          "key.bodyoffset" : 315,
          "key.doc.column" : 17,
          "key.doc.declaration" : "public protocol FirstProtocol",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"2\" column=\"17\"><Name>FirstProtocol<\/Name><USR>s:14SpmSwiftModule13FirstProtocolP<\/USR><Declaration>public protocol FirstProtocol<\/Declaration><CommentParts><Abstract><Para>A protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 2,
          "key.doc.name" : "FirstProtocol",
          "key.doc.type" : "Class",
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FirstProtocol<\/decl.name><\/decl.protocol>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 75,
          "key.name" : "FirstProtocol",
          "key.namelength" : 13,
          "key.nameoffset" : 300,
          "key.offset" : 290,
          "key.parsed_declaration" : "extension FirstProtocol",
          "key.parsed_scope.end" : 19,
          "key.parsed_scope.start" : 16,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func e()<\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "A protocol extension method"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func e()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "e"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 362,
              "key.doc.column" : 8,
              "key.doc.comment" : "A protocol extension method",
              "key.doc.declaration" : "func e()",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"18\" column=\"8\"><Name>e()<\/Name><USR>s:14SpmSwiftModule13FirstProtocolPAAE1eyyF<\/USR><Declaration>func e()<\/Declaration><CommentParts><Abstract><Para>A protocol extension method<\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 18,
              "key.doc.name" : "e()",
              "key.doc.type" : "Function",
              "key.doclength" : 32,
              "key.docoffset" : 318,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>e<\/decl.name>()<\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 11,
              "key.name" : "e()",
              "key.namelength" : 3,
              "key.nameoffset" : 357,
              "key.offset" : 352,
              "key.parsed_declaration" : "func e()",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.typename" : "<Self where Self : FirstProtocol> (Self) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolPAAE1eyyF"
            }
          ],
          "key.typename" : "FirstProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule13FirstProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule13FirstProtocolP"
        },
        {
          "key.annotated_decl" : "<Declaration>public protocol FirstProtocol<\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A protocol."
            },
            "key.bb.doc_source" : "inherited"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "FirstProtocol"
            }
          ],
          "key.bodylength" : 121,
          "key.bodyoffset" : 392,
          "key.doc.column" : 17,
          "key.doc.declaration" : "public protocol FirstProtocol",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"2\" column=\"17\"><Name>FirstProtocol<\/Name><USR>s:14SpmSwiftModule13FirstProtocolP<\/USR><Declaration>public protocol FirstProtocol<\/Declaration><CommentParts><Abstract><Para>A protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 2,
          "key.doc.name" : "FirstProtocol",
          "key.doc.type" : "Class",
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FirstProtocol<\/decl.name><\/decl.protocol>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 147,
          "key.name" : "FirstProtocol",
          "key.namelength" : 13,
          "key.nameoffset" : 377,
          "key.offset" : 367,
          "key.parsed_declaration" : "extension FirstProtocol",
          "key.parsed_scope.end" : 28,
          "key.parsed_scope.start" : 21,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>func m(arg: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "Return a safe default."
                },
                "key.bb.discussion" : {
                  "en" : "There’s more: it’s the empty string."
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func m(arg: Int) -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "m"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.bodylength" : 10,
              "key.bodyoffset" : 501,
              "key.doc.column" : 8,
              "key.doc.comment" : "Return a safe default.\n\nThere's more: it's the empty string.",
              "key.doc.declaration" : "func m(arg: Int) -> String",
              "key.doc.discussion" : [
                {
                  "Para" : "There’s more: it’s the empty string."
                }
              ],
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"25\" column=\"8\"><Name>m(arg:)<\/Name><USR>s:14SpmSwiftModule13FirstProtocolPAAE1m3argSSSi_tF<\/USR><Declaration>func m(arg: Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Return a safe default.<\/Para><\/Abstract><Discussion><Para>There’s more: it’s the empty string.<\/Para><\/Discussion><\/CommentParts><\/Function>",
              "key.doc.line" : 25,
              "key.doc.name" : "m(arg:)",
              "key.doc.type" : "Function",
              "key.doclength" : 76,
              "key.docoffset" : 395,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>m<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>arg<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 39,
              "key.name" : "m(arg:)",
              "key.namelength" : 11,
              "key.nameoffset" : 478,
              "key.offset" : 473,
              "key.parsed_declaration" : "func m(arg: Int) -> String",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 25,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolP1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolPAASH9AssocTypeRpzrlE1m3argSSSi_tF\">m(arg: Int) -&gt; String<\/RelatedName>"
                }
              ],
              "key.typename" : "<Self where Self : FirstProtocol> (Self) -> (Int) -> String",
              "key.typeusr" : "$s3argSSSi_tcD",
              "key.usr" : "s:14SpmSwiftModule13FirstProtocolPAAE1m3argSSSi_tF"
            }
          ],
          "key.typename" : "FirstProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule13FirstProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule13FirstProtocolP"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public protocol SecondProtocol : <Type usr=\"s:14SpmSwiftModule13FirstProtocolP\">FirstProtocol<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 516
            }
          ],
          "key.bb.inherited_types" : [
            {
              "key.bb.type_name" : "FirstProtocol"
            }
          ],
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public protocol SecondProtocol: FirstProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "protocol "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "SecondProtocol"
            }
          ],
          "key.bodylength" : 41,
          "key.bodyoffset" : 563,
          "key.elements" : [
            {
              "key.kind" : "source.lang.swift.structure.elem.typeref",
              "key.length" : 13,
              "key.offset" : 548
            }
          ],
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SecondProtocol<\/decl.name> : <ref.protocol usr=\"s:14SpmSwiftModule13FirstProtocolP\">FirstProtocol<\/ref.protocol><\/decl.protocol>",
          "key.inheritedtypes" : [
            {
              "key.name" : "FirstProtocol"
            }
          ],
          "key.kind" : "source.lang.swift.decl.protocol",
          "key.length" : 82,
          "key.name" : "SecondProtocol",
          "key.namelength" : 14,
          "key.nameoffset" : 532,
          "key.offset" : 523,
          "key.parsed_declaration" : "public protocol SecondProtocol: FirstProtocol",
          "key.parsed_scope.end" : 32,
          "key.parsed_scope.start" : 30,
          "key.substructure" : [
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>func secondProtocolMethod() -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "func secondProtocolMethod() -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "secondProtocolMethod"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "() -> String"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>secondProtocolMethod<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 37,
              "key.name" : "secondProtocolMethod()",
              "key.namelength" : 22,
              "key.nameoffset" : 571,
              "key.offset" : 566,
              "key.parsed_declaration" : "func secondProtocolMethod() -> String",
              "key.parsed_scope.end" : 31,
              "key.parsed_scope.start" : 31,
              "key.typename" : "<Self where Self : SecondProtocol> (Self) -> () -> String",
              "key.typeusr" : "$sSSycD",
              "key.usr" : "s:14SpmSwiftModule14SecondProtocolP06secondE6MethodSSyF"
            }
          ],
          "key.typename" : "SecondProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule14SecondProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule14SecondProtocolP"
        },
        {
          "key.annotated_decl" : "<Declaration>public protocol SecondProtocol : <Type usr=\"s:14SpmSwiftModule13FirstProtocolP\">FirstProtocol<\/Type><\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "extension SecondProtocol",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "extension "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "SecondProtocol"
            }
          ],
          "key.bodylength" : 256,
          "key.bodyoffset" : 633,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
          "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SecondProtocol<\/decl.name> : <ref.protocol usr=\"s:14SpmSwiftModule13FirstProtocolP\">FirstProtocol<\/ref.protocol><\/decl.protocol>",
          "key.kind" : "source.lang.swift.decl.extension",
          "key.length" : 283,
          "key.name" : "SecondProtocol",
          "key.namelength" : 14,
          "key.nameoffset" : 617,
          "key.offset" : 607,
          "key.parsed_declaration" : "extension SecondProtocol",
          "key.parsed_scope.end" : 40,
          "key.parsed_scope.start" : 34,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>var getOnly: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "A default implementation for a method of `FirstProtocol`\nprovided by `SecondProtocol`.\nFrom source we mess this up as an extension method.\nFrom symbolgraph we mess this up as being part of `FirstProtocol`."
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var getOnly: Int { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "getOnly"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int"
                }
              ],
              "key.bodylength" : 3,
              "key.bodyoffset" : 884,
              "key.doc.column" : 7,
              "key.doc.comment" : "A default implementation for a method of `FirstProtocol`\nprovided by `SecondProtocol`.\nFrom source we mess this up as an extension method.\nFrom symbolgraph we mess this up as being part of `FirstProtocol`.",
              "key.doc.declaration" : "var getOnly: Int { get }",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift\" line=\"39\" column=\"7\"><Name>getOnly<\/Name><USR>s:14SpmSwiftModule14SecondProtocolPAAE7getOnlySivp<\/USR><Declaration>var getOnly: Int { get }<\/Declaration><CommentParts><Abstract><Para>A default implementation for a method of <codeVoice>FirstProtocol<\/codeVoice> provided by <codeVoice>SecondProtocol<\/codeVoice>. From source we mess this up as an extension method. From symbolgraph we mess this up as being part of <codeVoice>FirstProtocol<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
              "key.doc.line" : 39,
              "key.doc.name" : "getOnly",
              "key.doc.type" : "Other",
              "key.doclength" : 228,
              "key.docoffset" : 636,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/Protocols.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>getOnly<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 22,
              "key.name" : "getOnly",
              "key.namelength" : 7,
              "key.nameoffset" : 870,
              "key.offset" : 866,
              "key.parsed_declaration" : "var getOnly: Int",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 39,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule13FirstProtocolP7getOnlySivp\">getOnly<\/RelatedName>"
                }
              ],
              "key.typename" : "Int",
              "key.typeusr" : "$sSiD",
              "key.usr" : "s:14SpmSwiftModule14SecondProtocolPAAE7getOnlySivp"
            }
          ],
          "key.typename" : "SecondProtocol.Protocol",
          "key.typeusr" : "$s14SpmSwiftModule14SecondProtocol_pmD",
          "key.usr" : "s:14SpmSwiftModule14SecondProtocolP"
        }
      ]
    }
  },
  {
    "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift" : {
      "key.bb.module_name" : "SpmSwiftModule",
      "key.bb.pass_index" : 0,
      "key.bb.version" : "1.0",
      "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
      "key.length" : 2535,
      "key.offset" : 0,
      "key.substructure" : [
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public struct SpmSwiftModule<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 19
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "Main structure"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public struct SpmSwiftModule",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "struct "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "SpmSwiftModule"
            }
          ],
          "key.bodylength" : 328,
          "key.bodyoffset" : 49,
          "key.doc.column" : 15,
          "key.doc.comment" : "Main structure",
          "key.doc.declaration" : "public struct SpmSwiftModule",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"2\" column=\"15\"><Name>SpmSwiftModule<\/Name><USR>s:14SpmSwiftModuleAAV<\/USR><Declaration>public struct SpmSwiftModule<\/Declaration><CommentParts><Abstract><Para>Main structure<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 2,
          "key.doc.name" : "SpmSwiftModule",
          "key.doc.type" : "Class",
          "key.doclength" : 19,
          "key.docoffset" : 0,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SpmSwiftModule<\/decl.name><\/decl.struct>",
          "key.kind" : "source.lang.swift.decl.struct",
          "key.length" : 352,
          "key.name" : "SpmSwiftModule",
          "key.namelength" : 14,
          "key.nameoffset" : 33,
          "key.offset" : 26,
          "key.parsed_declaration" : "public struct SpmSwiftModule",
          "key.parsed_scope.end" : 21,
          "key.parsed_scope.start" : 2,
          "key.substructure" : [
            {
              "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
              "key.length" : 12,
              "key.name" : "MARK: Fields",
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 57
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public var text: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 74
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public var text: String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "text"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>text<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 26,
              "key.name" : "text",
              "key.namelength" : 4,
              "key.nameoffset" : 85,
              "key.offset" : 81,
              "key.parsed_declaration" : "public var text = \"Hello, World!\"",
              "key.parsed_scope.end" : 4,
              "key.parsed_scope.start" : 4,
              "key.setter_accessibility" : "source.lang.swift.accessibility.public",
              "key.typename" : "String",
              "key.typeusr" : "$sSSD",
              "key.usr" : "s:14SpmSwiftModuleAAV4textSSvp"
            },
            {
              "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
              "key.length" : 29,
              "key.name" : "MARK: _Nested_ strúctures ``",
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 116
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/Type>.Nested1<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 151
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public struct Nested1",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "struct "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "Nested1"
                }
              ],
              "key.bodylength" : 116,
              "key.bodyoffset" : 174,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.struct usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/ref.struct>.<decl.name>Nested1<\/decl.name><\/decl.struct>",
              "key.kind" : "source.lang.swift.decl.struct",
              "key.length" : 133,
              "key.name" : "Nested1",
              "key.namelength" : 7,
              "key.nameoffset" : 165,
              "key.offset" : 158,
              "key.parsed_declaration" : "public struct Nested1",
              "key.parsed_scope.end" : 14,
              "key.parsed_scope.start" : 8,
              "key.substructure" : [
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/Type>.<Type usr=\"s:14SpmSwiftModuleAAV7Nested1V\">Nested1<\/Type>.Nested2a<\/Declaration>",
                  "key.attributes" : [
                    {
                      "key.attribute" : "source.decl.attribute.public",
                      "key.length" : 6,
                      "key.offset" : 182
                    }
                  ],
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "public struct Nested2a",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "struct "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "Nested2a"
                    }
                  ],
                  "key.bodylength" : 7,
                  "key.bodyoffset" : 206,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.struct usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/ref.struct>.<ref.struct usr=\"s:14SpmSwiftModuleAAV7Nested1V\">Nested1<\/ref.struct>.<decl.name>Nested2a<\/decl.name><\/decl.struct>",
                  "key.kind" : "source.lang.swift.decl.struct",
                  "key.length" : 25,
                  "key.name" : "Nested2a",
                  "key.namelength" : 8,
                  "key.nameoffset" : 196,
                  "key.offset" : 189,
                  "key.parsed_declaration" : "public struct Nested2a",
                  "key.parsed_scope.end" : 10,
                  "key.parsed_scope.start" : 9,
                  "key.typename" : "SpmSwiftModule.Nested1.Nested2a.Type",
                  "key.typeusr" : "$s14SpmSwiftModuleAAV7Nested1V8Nested2aVmD",
                  "key.usr" : "s:14SpmSwiftModuleAAV7Nested1V8Nested2aV"
                },
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/Type>.<Type usr=\"s:14SpmSwiftModuleAAV7Nested1V\">Nested1<\/Type>.Nested2b<\/Declaration>",
                  "key.attributes" : [
                    {
                      "key.attribute" : "source.decl.attribute.public",
                      "key.length" : 6,
                      "key.offset" : 253
                    },
                    {
                      "key.attribute" : "source.decl.attribute.available",
                      "key.length" : 25,
                      "key.offset" : 221
                    }
                  ],
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "public struct Nested2b",
                  "key.bb.swift_deprecated_everywhere" : true,
                  "key.bb.swift_deprecation_messages" : {
                    "en" : "Deprecated."
                  },
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "struct "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "Nested2b"
                    }
                  ],
                  "key.bodylength" : 7,
                  "key.bodyoffset" : 277,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.struct usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/ref.struct>.<ref.struct usr=\"s:14SpmSwiftModuleAAV7Nested1V\">Nested1<\/ref.struct>.<decl.name>Nested2b<\/decl.name><\/decl.struct>",
                  "key.kind" : "source.lang.swift.decl.struct",
                  "key.length" : 25,
                  "key.name" : "Nested2b",
                  "key.namelength" : 8,
                  "key.nameoffset" : 267,
                  "key.offset" : 260,
                  "key.parsed_declaration" : "public struct Nested2b",
                  "key.parsed_scope.end" : 13,
                  "key.parsed_scope.start" : 12,
                  "key.typename" : "SpmSwiftModule.Nested1.Nested2b.Type",
                  "key.typeusr" : "$s14SpmSwiftModuleAAV7Nested1V8Nested2bVmD",
                  "key.usr" : "s:14SpmSwiftModuleAAV7Nested1V8Nested2bV"
                }
              ],
              "key.typename" : "SpmSwiftModule.Nested1.Type",
              "key.typeusr" : "$s14SpmSwiftModuleAAV7Nested1VmD",
              "key.usr" : "s:14SpmSwiftModuleAAV7Nested1V"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/Type>.Nested2<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 297
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public struct Nested2",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "struct "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "Nested2"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 320,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.struct usr=\"s:14SpmSwiftModuleAAV\">SpmSwiftModule<\/ref.struct>.<decl.name>Nested2<\/decl.name><\/decl.struct>",
              "key.kind" : "source.lang.swift.decl.struct",
              "key.length" : 17,
              "key.name" : "Nested2",
              "key.namelength" : 7,
              "key.nameoffset" : 311,
              "key.offset" : 304,
              "key.parsed_declaration" : "public struct Nested2",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.typename" : "SpmSwiftModule.Nested2.Type",
              "key.typeusr" : "$s14SpmSwiftModuleAAV7Nested2VmD",
              "key.usr" : "s:14SpmSwiftModuleAAV7Nested2V"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>var a: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "A pair of Ints"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var a: Int",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "a"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int"
                }
              ],
              "key.doc.column" : 9,
              "key.doc.comment" : "A pair of Ints",
              "key.doc.declaration" : "var a: Int",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"19\" column=\"9\"><Name>a<\/Name><USR>s:14SpmSwiftModuleAAV1aSivp<\/USR><Declaration>var a: Int<\/Declaration><CommentParts><Abstract><Para>A pair of Ints<\/Para><\/Abstract><\/CommentParts><\/Other>",
              "key.doc.line" : 19,
              "key.doc.name" : "a",
              "key.doc.type" : "Other",
              "key.doclength" : 19,
              "key.docoffset" : 327,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>a<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 26,
              "key.name" : "a",
              "key.namelength" : 1,
              "key.nameoffset" : 354,
              "key.offset" : 350,
              "key.parsed_declaration" : "var a: Int,\n    b: Int",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "Int",
              "key.typeusr" : "$sSiD",
              "key.usr" : "s:14SpmSwiftModuleAAV1aSivp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>var b: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "A pair of Ints"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var b: Int",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "b"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int"
                }
              ],
              "key.doc.column" : 9,
              "key.doc.declaration" : "var b: Int",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"20\" column=\"9\"><Name>b<\/Name><USR>s:14SpmSwiftModuleAAV1bSivp<\/USR><Declaration>var b: Int<\/Declaration><CommentParts><Abstract><Para>A pair of Ints<\/Para><\/Abstract><\/CommentParts><\/Other>",
              "key.doc.line" : 20,
              "key.doc.name" : "b",
              "key.doc.type" : "Other",
              "key.doclength" : 19,
              "key.docoffset" : 327,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>b<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 26,
              "key.name" : "b",
              "key.namelength" : 1,
              "key.nameoffset" : 370,
              "key.offset" : 350,
              "key.parsed_declaration" : "var a: Int,\n    b: Int",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "Int",
              "key.typeusr" : "$sSiD",
              "key.usr" : "s:14SpmSwiftModuleAAV1bSivp"
            }
          ],
          "key.typename" : "SpmSwiftModule.Type",
          "key.typeusr" : "$s14SpmSwiftModuleAAVmD",
          "key.usr" : "s:14SpmSwiftModuleAAV"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public enum AnEnum<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 392
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "An enum"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public enum AnEnum",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "enum "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "AnEnum"
            }
          ],
          "key.bodylength" : 193,
          "key.bodyoffset" : 412,
          "key.doc.column" : 13,
          "key.doc.comment" : "An enum",
          "key.doc.declaration" : "public enum AnEnum",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"24\" column=\"13\"><Name>AnEnum<\/Name><USR>s:14SpmSwiftModule6AnEnumO<\/USR><Declaration>public enum AnEnum<\/Declaration><CommentParts><Abstract><Para>An enum<\/Para><\/Abstract><\/CommentParts><\/Other>",
          "key.doc.line" : 24,
          "key.doc.name" : "AnEnum",
          "key.doc.type" : "Other",
          "key.doclength" : 12,
          "key.docoffset" : 380,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>AnEnum<\/decl.name><\/decl.enum>",
          "key.kind" : "source.lang.swift.decl.enum",
          "key.length" : 207,
          "key.name" : "AnEnum",
          "key.namelength" : 6,
          "key.nameoffset" : 404,
          "key.offset" : 399,
          "key.parsed_declaration" : "public enum AnEnum",
          "key.parsed_scope.end" : 33,
          "key.parsed_scope.start" : 24,
          "key.substructure" : [
            {
              "key.kind" : "source.lang.swift.decl.enumcase",
              "key.length" : 15,
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 436,
              "key.substructure" : [
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>case first(<Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                  "key.bb.documentation" : {
                    "key.bb.abstract" : {
                      "en" : "First case"
                    },
                    "key.bb.doc_source" : "docComment"
                  },
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "case first(Int)",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "case "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "first"
                    },
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "(Int)"
                    }
                  ],
                  "key.doc.column" : 10,
                  "key.doc.comment" : "First case",
                  "key.doc.declaration" : "",
                  "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"26\" column=\"10\"><Name>first(_:)<\/Name><USR>s:14SpmSwiftModule6AnEnumO5firstyACSicACmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>First case<\/Para><\/Abstract><\/CommentParts><\/Other>",
                  "key.doc.line" : 26,
                  "key.doc.name" : "first(_:)",
                  "key.doc.type" : "Other",
                  "key.doclength" : 15,
                  "key.docoffset" : 417,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>first<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                  "key.kind" : "source.lang.swift.decl.enumelement",
                  "key.length" : 10,
                  "key.name" : "first(_:)",
                  "key.namelength" : 10,
                  "key.nameoffset" : 441,
                  "key.offset" : 441,
                  "key.parsed_declaration" : "case first(Int)",
                  "key.parsed_scope.end" : 26,
                  "key.parsed_scope.start" : 26,
                  "key.typename" : "(AnEnum.Type) -> (Int) -> AnEnum",
                  "key.typeusr" : "$sy14SpmSwiftModule6AnEnumOSicACmcD",
                  "key.usr" : "s:14SpmSwiftModule6AnEnumO5firstyACSicACmF"
                }
              ]
            },
            {
              "key.kind" : "source.lang.swift.decl.enumcase",
              "key.length" : 11,
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 476,
              "key.substructure" : [
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>case second<\/Declaration>",
                  "key.bb.documentation" : {
                    "key.bb.abstract" : {
                      "en" : "Second case"
                    },
                    "key.bb.doc_source" : "docComment"
                  },
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "case second",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "case "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "second"
                    }
                  ],
                  "key.doc.column" : 10,
                  "key.doc.comment" : "Second case",
                  "key.doc.declaration" : "",
                  "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"28\" column=\"10\"><Name>second<\/Name><USR>s:14SpmSwiftModule6AnEnumO6secondyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Second case<\/Para><\/Abstract><\/CommentParts><\/Other>",
                  "key.doc.line" : 28,
                  "key.doc.name" : "second",
                  "key.doc.type" : "Other",
                  "key.doclength" : 16,
                  "key.docoffset" : 456,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>second<\/decl.name><\/decl.enumelement>",
                  "key.kind" : "source.lang.swift.decl.enumelement",
                  "key.length" : 6,
                  "key.name" : "second",
                  "key.namelength" : 6,
                  "key.nameoffset" : 481,
                  "key.offset" : 481,
                  "key.parsed_declaration" : "case second",
                  "key.parsed_scope.end" : 28,
                  "key.parsed_scope.start" : 28,
                  "key.typename" : "(AnEnum.Type) -> AnEnum",
                  "key.typeusr" : "$sy14SpmSwiftModule6AnEnumOACmcD",
                  "key.usr" : "s:14SpmSwiftModule6AnEnumO6secondyA2CmF"
                }
              ]
            },
            {
              "key.kind" : "source.lang.swift.decl.enumcase",
              "key.length" : 18,
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 532,
              "key.substructure" : [
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>case third<\/Declaration>",
                  "key.bb.documentation" : {
                    "key.bb.abstract" : {
                      "en" : "Third & Fourth cases - `second`"
                    },
                    "key.bb.doc_source" : "docComment"
                  },
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "case third",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "case "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "third"
                    }
                  ],
                  "key.doc.column" : 10,
                  "key.doc.comment" : "Third & Fourth cases - `second`",
                  "key.doc.declaration" : "",
                  "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"30\" column=\"10\"><Name>third<\/Name><USR>s:14SpmSwiftModule6AnEnumO5thirdyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Third &amp; Fourth cases - <codeVoice>second<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
                  "key.doc.line" : 30,
                  "key.doc.name" : "third",
                  "key.doc.type" : "Other",
                  "key.doclength" : 36,
                  "key.docoffset" : 492,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>third<\/decl.name><\/decl.enumelement>",
                  "key.kind" : "source.lang.swift.decl.enumelement",
                  "key.length" : 5,
                  "key.name" : "third",
                  "key.namelength" : 5,
                  "key.nameoffset" : 537,
                  "key.offset" : 537,
                  "key.parsed_declaration" : "case third",
                  "key.parsed_scope.end" : 30,
                  "key.parsed_scope.start" : 30,
                  "key.typename" : "(AnEnum.Type) -> AnEnum",
                  "key.typeusr" : "$sy14SpmSwiftModule6AnEnumOACmcD",
                  "key.usr" : "s:14SpmSwiftModule6AnEnumO5thirdyA2CmF"
                },
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>case fourth<\/Declaration>",
                  "key.bb.documentation" : {
                    "key.bb.abstract" : {
                      "en" : "Third & Fourth cases - `second`"
                    },
                    "key.bb.doc_source" : "docComment"
                  },
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "case fourth",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "case "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "fourth"
                    }
                  ],
                  "key.doc.column" : 17,
                  "key.doc.declaration" : "",
                  "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"30\" column=\"17\"><Name>fourth<\/Name><USR>s:14SpmSwiftModule6AnEnumO6fourthyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Third &amp; Fourth cases - <codeVoice>second<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
                  "key.doc.line" : 30,
                  "key.doc.name" : "fourth",
                  "key.doc.type" : "Other",
                  "key.doclength" : 36,
                  "key.docoffset" : 492,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fourth<\/decl.name><\/decl.enumelement>",
                  "key.kind" : "source.lang.swift.decl.enumelement",
                  "key.length" : 6,
                  "key.name" : "fourth",
                  "key.namelength" : 6,
                  "key.nameoffset" : 544,
                  "key.offset" : 544,
                  "key.parsed_declaration" : "case third, fourth",
                  "key.parsed_scope.end" : 30,
                  "key.parsed_scope.start" : 30,
                  "key.typename" : "(AnEnum.Type) -> AnEnum",
                  "key.typeusr" : "$sy14SpmSwiftModule6AnEnumOACmcD",
                  "key.usr" : "s:14SpmSwiftModule6AnEnumO6fourthyA2CmF"
                }
              ]
            },
            {
              "key.kind" : "source.lang.swift.decl.enumcase",
              "key.length" : 30,
              "key.namelength" : 0,
              "key.nameoffset" : 0,
              "key.offset" : 574,
              "key.substructure" : [
                {
                  "key.accessibility" : "source.lang.swift.accessibility.public",
                  "key.annotated_decl" : "<Declaration>case fifth(a: <Type usr=\"s:SS\">String<\/Type>, _: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
                  "key.bb.documentation" : {
                    "key.bb.abstract" : {
                      "en" : "Fifth case"
                    },
                    "key.bb.doc_source" : "docComment"
                  },
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "case fifth(a: String, _: Int)",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "case "
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "fifth"
                    },
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : "("
                    },
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "a"
                    },
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : ": String, Int)"
                    }
                  ],
                  "key.doc.column" : 10,
                  "key.doc.comment" : "Fifth case",
                  "key.doc.declaration" : "",
                  "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.doc.full_as_xml" : "<Other file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"32\" column=\"10\"><Name>fifth(a:_:)<\/Name><USR>s:14SpmSwiftModule6AnEnumO5fifthyACSS_SitcACmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Fifth case<\/Para><\/Abstract><\/CommentParts><\/Other>",
                  "key.doc.line" : 32,
                  "key.doc.name" : "fifth(a:_:)",
                  "key.doc.type" : "Other",
                  "key.doclength" : 15,
                  "key.docoffset" : 555,
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fifth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>a<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                  "key.kind" : "source.lang.swift.decl.enumelement",
                  "key.length" : 25,
                  "key.name" : "fifth(a:_:)",
                  "key.namelength" : 25,
                  "key.nameoffset" : 579,
                  "key.offset" : 579,
                  "key.parsed_declaration" : "case fifth(a: String,_ b: Int)",
                  "key.parsed_scope.end" : 32,
                  "key.parsed_scope.start" : 32,
                  "key.typename" : "(AnEnum.Type) -> (String, Int) -> AnEnum",
                  "key.typeusr" : "$sy14SpmSwiftModule6AnEnumOSS_SitcACmcD",
                  "key.usr" : "s:14SpmSwiftModule6AnEnumO5fifthyACSS_SitcACmF"
                }
              ]
            }
          ],
          "key.typename" : "AnEnum.Type",
          "key.typeusr" : "$s14SpmSwiftModule6AnEnumOmD",
          "key.usr" : "s:14SpmSwiftModule6AnEnumO"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func functionA(arg1: <Type usr=\"s:Si\">Int<\/Type>, _ arg2: <Type usr=\"s:Si\">Int<\/Type>, arg3 argMeaning: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 868
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 74,
              "key.offset" : 793
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 33,
              "key.offset" : 759
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 33,
              "key.offset" : 759
            }
          ],
          "key.bb.availabilities" : [
            {
              "key.bb.availability" : "iOS 9+"
            },
            {
              "key.bb.availability" : "macOS 10.12+"
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "See `SpmSwiftModule` – or `SpmSwiftModule.ABaseClass`."
            },
            "key.bb.doc_source" : "docComment",
            "key.bb.parameters" : [
              {
                "key.bb.param_desc" : {
                  "en" : "Number one"
                },
                "key.bb.param_name" : "arg1"
              },
              {
                "key.bb.param_desc" : {
                  "en" : "Second"
                },
                "key.bb.param_name" : "arg2"
              },
              {
                "key.bb.param_desc" : {
                  "en" : "Third"
                },
                "key.bb.param_name" : "arg3"
              }
            ]
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public func functionA(\n    arg1: Int,\n    _ arg2: Int,\n    arg3 argMeaning: Int)",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "func "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "functionA"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "("
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "arg1"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : ": Int, Int, "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "arg3"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : ": Int)"
            }
          ],
          "key.bb.swift_unavailable_messages" : {
            "en" : "tvOS - unavailable. Not available on the big screen."
          },
          "key.bodylength" : 1,
          "key.bodyoffset" : 981,
          "key.doc.column" : 13,
          "key.doc.comment" : "- parameters:\n   - arg1: Number one\n   - arg2: Second\n   - arg3: Third\n\nSee `SpmSwiftModule` -- or `SpmSwiftModule.ABaseClass`.",
          "key.doc.declaration" : "@available(iOS 9, macOS 10.12, *)\n@available(tvOS, unavailable, message: \"Not available on the big screen.\")\npublic func functionA(arg1: Int, _ arg2: Int, arg3 argMeaning: Int)",
          "key.doc.discussion" : [
            {
              "Para" : "See `SpmSwiftModule` – or `SpmSwiftModule.ABaseClass`."
            }
          ],
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"43\" column=\"13\"><Name>functionA(arg1:_:arg3:)<\/Name><USR>s:14SpmSwiftModule9functionA4arg1_4arg3ySi_S2itF<\/USR><Declaration>@available(iOS 9, macOS 10.12, *)\n@available(tvOS, unavailable, message: &quot;Not available on the big screen.&quot;)\npublic func functionA(arg1: Int, _ arg2: Int, arg3 argMeaning: Int)<\/Declaration><CommentParts><Parameters><Parameter><Name>arg1<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Number one<\/Para><\/Discussion><\/Parameter><Parameter><Name>arg2<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Second<\/Para><\/Discussion><\/Parameter><Parameter><Name>arg3<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Third<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>See <codeVoice>SpmSwiftModule<\/codeVoice> – or <codeVoice>SpmSwiftModule.ABaseClass<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
          "key.doc.line" : 43,
          "key.doc.name" : "functionA(arg1:_:arg3:)",
          "key.doc.parameters" : [
            {
              "discussion" : [
                {
                  "Para" : "Number one"
                }
              ],
              "name" : "arg1"
            },
            {
              "discussion" : [
                {
                  "Para" : "Second"
                }
              ],
              "name" : "arg2"
            },
            {
              "discussion" : [
                {
                  "Para" : "Third"
                }
              ],
              "name" : "arg3"
            }
          ],
          "key.doc.type" : "Function",
          "key.doclength" : 151,
          "key.docoffset" : 608,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>functionA<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>arg1<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>arg2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>arg3<\/decl.var.parameter.argument_label> <decl.var.parameter.name>argMeaning<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.free>",
          "key.kind" : "source.lang.swift.decl.function.free",
          "key.length" : 108,
          "key.name" : "functionA(arg1:_:arg3:)",
          "key.namelength" : 99,
          "key.nameoffset" : 880,
          "key.offset" : 875,
          "key.parsed_declaration" : "public func functionA(arg1: Int,\n                      _ arg2: Int,\n                      arg3 argMeaning: Int)",
          "key.parsed_scope.end" : 46,
          "key.parsed_scope.start" : 43,
          "key.typename" : "(Int, Int, Int) -> ()",
          "key.typeusr" : "$s4arg1_4arg3ySi_S2itcD",
          "key.usr" : "s:14SpmSwiftModule9functionA4arg1_4arg3ySi_S2itF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public func deprecatedFunction(callback: (_ report: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 1237
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 25,
              "key.offset" : 1211
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 74,
              "key.offset" : 1136
            },
            {
              "key.attribute" : "source.decl.attribute.available",
              "key.length" : 57,
              "key.offset" : 1078
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A deprecated function"
            },
            "key.bb.doc_source" : "docComment",
            "key.bb.parameters" : [
              {
                "key.bb.param_desc" : {
                  "en" : "The callback"
                },
                "key.bb.param_name" : "callback"
              }
            ],
            "key.bb.returns" : {
              "en" : "A string"
            }
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public func deprecatedFunction(callback: (_ report: String) -> Int) -> String",
          "key.bb.swift_deprecated_everywhere" : true,
          "key.bb.swift_deprecation_messages" : {
            "en" : "iOS - deprecated since 12.0. Deprecated!.\n\nmacOS - deprecated since 10.14. Deprecated on *macOS* too.\n\nDeprecated."
          },
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "func "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "deprecatedFunction"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "("
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "callback"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : ": (_ report: String) -> Int) -> String"
            }
          ],
          "key.bodylength" : 13,
          "key.bodyoffset" : 1316,
          "key.doc.column" : 13,
          "key.doc.comment" : "A deprecated function\n\n- parameter callback: The callback\n- returns: A string",
          "key.doc.declaration" : "@available(iOS, deprecated: 12.0, message: \"Deprecated!\")\n@available(macOS, deprecated: 10.14, message: \"Deprecated on *macOS* too\")\n@available(*, deprecated)\npublic func deprecatedFunction(callback: (_ report: String) -> Int) -> String",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"55\" column=\"13\"><Name>deprecatedFunction(callback:)<\/Name><USR>s:14SpmSwiftModule18deprecatedFunction8callbackSSSiSSXE_tF<\/USR><Declaration>@available(iOS, deprecated: 12.0, message: &quot;Deprecated!&quot;)\n@available(macOS, deprecated: 10.14, message: &quot;Deprecated on *macOS* too&quot;)\n@available(*, deprecated)\npublic func deprecatedFunction(callback: (_ report: String) -&gt; Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>A deprecated function<\/Para><\/Abstract><Parameters><Parameter><Name>callback<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The callback<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A string<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
          "key.doc.line" : 55,
          "key.doc.name" : "deprecatedFunction(callback:)",
          "key.doc.parameters" : [
            {
              "discussion" : [
                {
                  "Para" : "The callback"
                }
              ],
              "name" : "callback"
            }
          ],
          "key.doc.result_discussion" : [
            {
              "Para" : "A string"
            }
          ],
          "key.doc.type" : "Function",
          "key.doclength" : 93,
          "key.docoffset" : 985,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>deprecatedFunction<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>callback<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>report<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
          "key.kind" : "source.lang.swift.decl.function.free",
          "key.length" : 86,
          "key.name" : "deprecatedFunction(callback:)",
          "key.namelength" : 55,
          "key.nameoffset" : 1249,
          "key.offset" : 1244,
          "key.parsed_declaration" : "public func deprecatedFunction(callback: (_ report: String) -> Int) -> String",
          "key.parsed_scope.end" : 57,
          "key.parsed_scope.start" : 55,
          "key.typename" : "((String) -> Int) -> String",
          "key.typeusr" : "$s8callbackSSSiSSXE_tcD",
          "key.usr" : "s:14SpmSwiftModule18deprecatedFunction8callbackSSSiSSXE_tF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public class ABaseClass<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 1349
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A base class"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public class ABaseClass",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "class "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "ABaseClass"
            }
          ],
          "key.bodylength" : 592,
          "key.bodyoffset" : 1374,
          "key.doc.column" : 14,
          "key.doc.comment" : "A base class",
          "key.doc.declaration" : "public class ABaseClass",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"60\" column=\"14\"><Name>ABaseClass<\/Name><USR>s:14SpmSwiftModule10ABaseClassC<\/USR><Declaration>public class ABaseClass<\/Declaration><CommentParts><Abstract><Para>A base class<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 60,
          "key.doc.name" : "ABaseClass",
          "key.doc.type" : "Class",
          "key.doclength" : 17,
          "key.docoffset" : 1332,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ABaseClass<\/decl.name><\/decl.class>",
          "key.kind" : "source.lang.swift.decl.class",
          "key.length" : 611,
          "key.name" : "ABaseClass",
          "key.namelength" : 10,
          "key.nameoffset" : 1362,
          "key.offset" : 1356,
          "key.parsed_declaration" : "public class ABaseClass",
          "key.parsed_scope.end" : 95,
          "key.parsed_scope.start" : 60,
          "key.substructure" : [
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1377
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public init()",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "init"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "()"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 1392,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 9,
              "key.name" : "init()",
              "key.namelength" : 6,
              "key.nameoffset" : 1384,
              "key.offset" : 1384,
              "key.parsed_declaration" : "public init()",
              "key.parsed_scope.end" : 61,
              "key.parsed_scope.start" : 61,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassC1aACSi_tcfc\">init(a:)<\/RelatedName>"
                }
              ],
              "key.typename" : "(ABaseClass.Type) -> () -> ABaseClass",
              "key.typeusr" : "$s14SpmSwiftModule10ABaseClassCycD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassCACycfc"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public convenience init(a: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.convenience",
                  "key.length" : 11,
                  "key.offset" : 1404
                },
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1397
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public convenience init(a: Int)",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "init"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "a"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int)"
                }
              ],
              "key.bodylength" : 13,
              "key.bodyoffset" : 1430,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>a<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 28,
              "key.name" : "init(a:)",
              "key.namelength" : 12,
              "key.nameoffset" : 1416,
              "key.offset" : 1416,
              "key.parsed_declaration" : "public convenience init(a: Int)",
              "key.parsed_scope.end" : 63,
              "key.parsed_scope.start" : 63,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCACycfc\">init()<\/RelatedName>"
                }
              ],
              "key.typename" : "(ABaseClass.Type) -> (Int) -> ABaseClass",
              "key.typeusr" : "$s1a14SpmSwiftModule10ABaseClassCSi_tcD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassC1aACSi_tcfc"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "deinit",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "deinit"
                }
              ],
              "key.bodylength" : 0,
              "key.bodyoffset" : 1456,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 9,
              "key.name" : "deinit",
              "key.namelength" : 6,
              "key.nameoffset" : 1448,
              "key.offset" : 1448,
              "key.parsed_declaration" : "deinit",
              "key.parsed_scope.end" : 65,
              "key.parsed_scope.start" : 65,
              "key.typename" : "(ABaseClass) -> () -> ()",
              "key.typeusr" : "$syycD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassCfd"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public func method(param: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1503
                }
              ],
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "Base class docs for `method(param:)`"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public func method(param: Int) -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "method"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "param"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 1545,
              "key.doc.column" : 15,
              "key.doc.comment" : "Base class docs for `method(param:)`",
              "key.doc.declaration" : "public func method(param: Int) -> String",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"67\" column=\"15\"><Name>method(param:)<\/Name><USR>s:14SpmSwiftModule10ABaseClassC6method5paramSSSi_tF<\/USR><Declaration>public func method(param: Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Base class docs for <codeVoice>method(param:)<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 67,
              "key.doc.name" : "method(param:)",
              "key.doc.type" : "Function",
              "key.doclength" : 41,
              "key.docoffset" : 1460,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>method<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>param<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 53,
              "key.name" : "method(param:)",
              "key.namelength" : 18,
              "key.nameoffset" : 1515,
              "key.offset" : 1510,
              "key.parsed_declaration" : "public func method(param: Int) -> String",
              "key.parsed_scope.end" : 69,
              "key.parsed_scope.start" : 67,
              "key.typename" : "(ABaseClass) -> (Int) -> String",
              "key.typeusr" : "$s5paramSSSi_tcD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassC6method5paramSSSi_tF"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public static func staticMethod() -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1567
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public static func staticMethod() -> Int",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "static func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "staticMethod"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "() -> Int"
                }
              ],
              "key.bodylength" : 16,
              "key.bodyoffset" : 1609,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>staticMethod<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
              "key.kind" : "source.lang.swift.decl.function.method.static",
              "key.length" : 52,
              "key.name" : "staticMethod()",
              "key.namelength" : 14,
              "key.nameoffset" : 1586,
              "key.offset" : 1574,
              "key.parsed_declaration" : "public static func staticMethod() -> Int",
              "key.parsed_scope.end" : 73,
              "key.parsed_scope.start" : 71,
              "key.typename" : "(ABaseClass.Type) -> () -> Int",
              "key.typeusr" : "$sSiycD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassC12staticMethodSiyFZ"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public subscript(arg: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> { get set }<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1630
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public subscript(arg: String) -> Int { get set }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "subscript"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String) -> Int"
                }
              ],
              "key.bodylength" : 50,
              "key.bodyoffset" : 1668,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>arg<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
              "key.kind" : "source.lang.swift.decl.function.subscript",
              "key.length" : 82,
              "key.name" : "subscript(_:)",
              "key.namelength" : 22,
              "key.nameoffset" : 1637,
              "key.offset" : 1637,
              "key.parsed_declaration" : "public subscript(arg: String) -> Int",
              "key.parsed_scope.end" : 81,
              "key.parsed_scope.start" : 75,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySiSScipZ\">subscript(_:)<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySSSicipZ\">subscript(_:)<\/RelatedName>"
                }
              ],
              "key.setter_accessibility" : "source.lang.swift.accessibility.public",
              "key.typename" : "(String) -> Int",
              "key.typeusr" : "$sySiSScD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassCySiSScip"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public static subscript(arg: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1723
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public static subscript(arg: String) -> Int { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "static "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "subscript"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String) -> Int"
                }
              ],
              "key.bodylength" : 16,
              "key.bodyoffset" : 1768,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>arg<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
              "key.kind" : "source.lang.swift.decl.function.subscript",
              "key.length" : 48,
              "key.name" : "subscript(_:)",
              "key.namelength" : 22,
              "key.nameoffset" : 1737,
              "key.offset" : 1737,
              "key.parsed_declaration" : "public static subscript(arg: String) -> Int",
              "key.parsed_scope.end" : 85,
              "key.parsed_scope.start" : 83,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySiSScip\">subscript(_:)<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySSSicipZ\">subscript(_:)<\/RelatedName>"
                }
              ],
              "key.typename" : "(String) -> Int",
              "key.typeusr" : "$sySiSScD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassCySiSScipZ"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public class subscript(arg: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1789
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public class subscript(arg: Int) -> String { get }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "class "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "subscript"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "arg"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 1833,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>arg<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
              "key.kind" : "source.lang.swift.decl.function.subscript",
              "key.length" : 49,
              "key.name" : "subscript(_:)",
              "key.namelength" : 19,
              "key.nameoffset" : 1802,
              "key.offset" : 1802,
              "key.parsed_declaration" : "public class subscript(arg: Int) -> String",
              "key.parsed_scope.end" : 89,
              "key.parsed_scope.start" : 87,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySiSScip\">subscript(_:)<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassCySiSScipZ\">subscript(_:)<\/RelatedName>"
                }
              ],
              "key.typename" : "(Int) -> String",
              "key.typeusr" : "$sySSSicD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassCySSSicipZ"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/Type>, rhs: <Type usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/Type>) -&gt; <Type usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 1874
                }
              ],
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "An operator\\!"
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public static func + (lhs: ABaseClass, rhs: ABaseClass) -> ABaseClass",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "static func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "+"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "lhs"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": ABaseClass, "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "rhs"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": ABaseClass) -> ABaseClass"
                }
              ],
              "key.bodylength" : 20,
              "key.bodyoffset" : 1944,
              "key.doc.column" : 22,
              "key.doc.comment" : "An operator!",
              "key.doc.declaration" : "public static func + (lhs: ABaseClass, rhs: ABaseClass) -> ABaseClass",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"92\" column=\"22\"><Name>+(_:_:)<\/Name><USR>s:14SpmSwiftModule10ABaseClassC1poiyA2C_ACtFZ<\/USR><Declaration>public static func + (lhs: ABaseClass, rhs: ABaseClass) -&gt; ABaseClass<\/Declaration><CommentParts><Abstract><Para>An operator!<\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 92,
              "key.doc.name" : "+(_:_:)",
              "key.doc.type" : "Function",
              "key.doclength" : 17,
              "key.docoffset" : 1855,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/ref.class><\/decl.function.returntype><\/decl.function.operator.infix>",
              "key.kind" : "source.lang.swift.decl.function.method.static",
              "key.length" : 84,
              "key.name" : "+(ABaseClass, ABaseClass)",
              "key.namelength" : 35,
              "key.nameoffset" : 1893,
              "key.offset" : 1881,
              "key.parsed_declaration" : "public static func +(lhs: ABaseClass, rhs: ABaseClass) -> ABaseClass",
              "key.parsed_scope.end" : 94,
              "key.parsed_scope.start" : 92,
              "key.related_decls" : [
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule1poiySSAA1TV_ADtF\">+ (_: T, _: T) -&gt; String<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s7Float16V1poiyA2B_ABtFZ\">+ (_: Float16, _: Float16) -&gt; Float16<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
                },
                {
                  "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
                }
              ],
              "key.substructure" : [
                {
                  "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/Type><\/Declaration>",
                  "key.bb.is_override" : false,
                  "key.bb.swift_declaration" : "let lhs: ABaseClass",
                  "key.bb.swift_deprecated_everywhere" : false,
                  "key.bb.swift_name_pieces" : [
                    {
                      "key.bb.name_piece_is_name" : true,
                      "key.bb.name_piece_text" : "lhs"
                    },
                    {
                      "key.bb.name_piece_is_name" : false,
                      "key.bb.name_piece_text" : ": ABaseClass"
                    }
                  ],
                  "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
                  "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>",
                  "key.kind" : "source.lang.swift.decl.var.parameter",
                  "key.length" : 3,
                  "key.name" : "lhs",
                  "key.offset" : 1895,
                  "key.parent_loc" : 1893,
                  "key.parsed_declaration" : "public static func +(lhs",
                  "key.parsed_scope.end" : 92,
                  "key.parsed_scope.start" : 92,
                  "key.typename" : "ABaseClass",
                  "key.typeusr" : "$s14SpmSwiftModule10ABaseClassCD",
                  "key.usr" : "s:14SpmSwiftModule10ABaseClassC1poiyA2C_ACtFZ3lhsL_ACvp"
                }
              ],
              "key.typename" : "(ABaseClass.Type) -> (ABaseClass, ABaseClass) -> ABaseClass",
              "key.typeusr" : "$sy14SpmSwiftModule10ABaseClassCAC_ACtcD",
              "key.usr" : "s:14SpmSwiftModule10ABaseClassC1poiyA2C_ACtFZ"
            }
          ],
          "key.typename" : "ABaseClass.Type",
          "key.typeusr" : "$s14SpmSwiftModule10ABaseClassCmD",
          "key.usr" : "s:14SpmSwiftModule10ABaseClassC"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.internal",
          "key.annotated_decl" : "<Declaration>struct T<\/Declaration>",
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "struct T",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "struct "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "T"
            }
          ],
          "key.bodylength" : 1,
          "key.bodyoffset" : 1979,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>T<\/decl.name><\/decl.struct>",
          "key.kind" : "source.lang.swift.decl.struct",
          "key.length" : 12,
          "key.name" : "T",
          "key.namelength" : 1,
          "key.nameoffset" : 1976,
          "key.offset" : 1969,
          "key.parsed_declaration" : "struct T",
          "key.parsed_scope.end" : 98,
          "key.parsed_scope.start" : 97,
          "key.typename" : "T.Type",
          "key.typeusr" : "$s14SpmSwiftModule1TVmD",
          "key.usr" : "s:14SpmSwiftModule1TV"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.internal",
          "key.annotated_decl" : "<Declaration>func + (lhs: <Type usr=\"s:14SpmSwiftModule1TV\">T<\/Type>, rhs: <Type usr=\"s:14SpmSwiftModule1TV\">T<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "Unscoped operator"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "func + (lhs: T, rhs: T) -> String",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "static func "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "+"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "("
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "lhs"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : ": T, "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "rhs"
            },
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : ": T) -> String"
            }
          ],
          "key.bodylength" : 6,
          "key.bodyoffset" : 2039,
          "key.doc.column" : 6,
          "key.doc.comment" : "Unscoped operator",
          "key.doc.declaration" : "func + (lhs: T, rhs: T) -> String",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"101\" column=\"6\"><Name>+(_:_:)<\/Name><USR>s:14SpmSwiftModule1poiySSAA1TV_ADtF<\/USR><Declaration>func + (lhs: T, rhs: T) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Unscoped operator<\/Para><\/Abstract><\/CommentParts><\/Function>",
          "key.doc.line" : 101,
          "key.doc.name" : "+(_:_:)",
          "key.doc.type" : "Function",
          "key.doclength" : 22,
          "key.docoffset" : 1983,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14SpmSwiftModule1TV\">T<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14SpmSwiftModule1TV\">T<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
          "key.kind" : "source.lang.swift.decl.function.free",
          "key.length" : 41,
          "key.name" : "+(T, T)",
          "key.namelength" : 17,
          "key.nameoffset" : 2010,
          "key.offset" : 2005,
          "key.parsed_declaration" : "func +(lhs: T, rhs: T) -> String",
          "key.parsed_scope.end" : 103,
          "key.parsed_scope.start" : 101,
          "key.related_decls" : [
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:14SpmSwiftModule10ABaseClassC1poiyA2C_ACtFZ\">+ (_: ABaseClass, _: ABaseClass) -&gt; ABaseClass<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s7Float16V1poiyA2B_ABtFZ\">+ (_: Float16, _: Float16) -&gt; Float16<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
            },
            {
              "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
            }
          ],
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14SpmSwiftModule1TV\">T<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "let lhs: T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "lhs"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": T"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14SpmSwiftModule1TV\">T<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>",
              "key.kind" : "source.lang.swift.decl.var.parameter",
              "key.length" : 3,
              "key.name" : "lhs",
              "key.offset" : 2012,
              "key.parent_loc" : 2010,
              "key.parsed_declaration" : "func +(lhs",
              "key.parsed_scope.end" : 101,
              "key.parsed_scope.start" : 101,
              "key.typename" : "T",
              "key.typeusr" : "$s14SpmSwiftModule1TVD",
              "key.usr" : "s:14SpmSwiftModule1poiySSAA1TV_ADtF3lhsL_ADvp"
            }
          ],
          "key.typename" : "(T, T) -> String",
          "key.typeusr" : "$sySS14SpmSwiftModule1TV_ACtcD",
          "key.usr" : "s:14SpmSwiftModule1poiySSAA1TV_ADtF"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.public",
          "key.annotated_decl" : "<Declaration>public class ADerivedClass&lt;T, Q&gt; : <Type usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/Type> where Q : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.public",
              "key.length" : 6,
              "key.offset" : 2068
            }
          ],
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "A derived class"
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.inherited_types" : [
            {
              "key.bb.type_name" : "ABaseClass"
            }
          ],
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "public class ADerivedClass<T, Q>: ABaseClass where Q: Sequence",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "class "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "ADerivedClass"
            }
          ],
          "key.bodylength" : 189,
          "key.bodyoffset" : 2124,
          "key.doc.column" : 14,
          "key.doc.comment" : "A derived class",
          "key.doc.declaration" : "public class ADerivedClass<T, Q> : ABaseClass where Q : Sequence",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"106\" column=\"14\"><Name>ADerivedClass<\/Name><USR>s:14SpmSwiftModule13ADerivedClassC<\/USR><Declaration>public class ADerivedClass&lt;T, Q&gt; : ABaseClass where Q : Sequence<\/Declaration><CommentParts><Abstract><Para>A derived class<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 106,
          "key.doc.name" : "ADerivedClass",
          "key.doc.type" : "Class",
          "key.doclength" : 20,
          "key.docoffset" : 2048,
          "key.elements" : [
            {
              "key.kind" : "source.lang.swift.structure.elem.typeref",
              "key.length" : 10,
              "key.offset" : 2112
            }
          ],
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ADerivedClass<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SpmSwiftModule13ADerivedClassC1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14SpmSwiftModule13ADerivedClassC1Qq_mfp\"><decl.generic_type_param.name>Q<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:14SpmSwiftModule10ABaseClassC\">ABaseClass<\/ref.class> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Q : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
          "key.inheritedtypes" : [
            {
              "key.name" : "ABaseClass"
            }
          ],
          "key.kind" : "source.lang.swift.decl.class",
          "key.length" : 239,
          "key.name" : "ADerivedClass",
          "key.namelength" : 13,
          "key.nameoffset" : 2081,
          "key.offset" : 2075,
          "key.parsed_declaration" : "public class ADerivedClass<T, Q: Sequence>: ABaseClass",
          "key.parsed_scope.end" : 117,
          "key.parsed_scope.start" : 106,
          "key.substructure" : [
            {
              "key.annotated_decl" : "<Declaration>T<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "T"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
              "key.kind" : "source.lang.swift.decl.generic_type_param",
              "key.length" : 1,
              "key.name" : "T",
              "key.namelength" : 1,
              "key.nameoffset" : 2095,
              "key.offset" : 2095,
              "key.parsed_declaration" : "public class ADerivedClass<T",
              "key.parsed_scope.end" : 106,
              "key.parsed_scope.start" : 106,
              "key.typename" : "T.Type",
              "key.typeusr" : "$sxmD",
              "key.usr" : "s:14SpmSwiftModule13ADerivedClassC1Txmfp"
            },
            {
              "key.annotated_decl" : "<Declaration>Q : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
              "key.bb.inherited_types" : [
                {
                  "key.bb.type_name" : "Sequence"
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "Q : Sequence",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "Q"
                }
              ],
              "key.elements" : [
                {
                  "key.kind" : "source.lang.swift.structure.elem.typeref",
                  "key.length" : 8,
                  "key.offset" : 2101
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Q<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
              "key.inheritedtypes" : [
                {
                  "key.name" : "Sequence"
                }
              ],
              "key.kind" : "source.lang.swift.decl.generic_type_param",
              "key.length" : 11,
              "key.name" : "Q",
              "key.namelength" : 1,
              "key.nameoffset" : 2098,
              "key.offset" : 2098,
              "key.parsed_declaration" : "public class ADerivedClass<T, Q: Sequence",
              "key.parsed_scope.end" : 106,
              "key.parsed_scope.start" : 106,
              "key.typename" : "Q.Type",
              "key.typeusr" : "$sq_mD",
              "key.usr" : "s:14SpmSwiftModule13ADerivedClassC1Qq_mfp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>var t: <Type usr=\"s:14SpmSwiftModule13ADerivedClassC1Qq_mfp\">Q<\/Type>?<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var t: Q?",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "t"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Q?"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>t<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14SpmSwiftModule13ADerivedClassC1Qq_mfp\">Q<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 15,
              "key.name" : "t",
              "key.namelength" : 1,
              "key.nameoffset" : 2131,
              "key.offset" : 2127,
              "key.parsed_declaration" : "var t: Q? = nil",
              "key.parsed_scope.end" : 107,
              "key.parsed_scope.start" : 107,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "Q?",
              "key.typeusr" : "$sq_SgD",
              "key.usr" : "s:14SpmSwiftModule13ADerivedClassC1tq_Sgvp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public override func method(param: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.override",
                  "key.length" : 8,
                  "key.offset" : 2189
                },
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 2182
                }
              ],
              "key.bb.documentation" : {
                "key.bb.abstract" : {
                  "en" : "See `ABaseClass.method(...)`."
                },
                "key.bb.doc_source" : "docComment"
              },
              "key.bb.is_override" : true,
              "key.bb.swift_declaration" : "public override func method(param: Int) -> String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "method"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "param"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": Int) -> String"
                }
              ],
              "key.bodylength" : 17,
              "key.bodyoffset" : 2233,
              "key.doc.column" : 24,
              "key.doc.comment" : "See `ABaseClass.method(...)`.",
              "key.doc.declaration" : "public override func method(param: Int) -> String",
              "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.doc.full_as_xml" : "<Function file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"110\" column=\"24\"><Name>method(param:)<\/Name><USR>s:14SpmSwiftModule13ADerivedClassC6method5paramSSSi_tF<\/USR><Declaration>public override func method(param: Int) -&gt; String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ABaseClass.method(...)<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
              "key.doc.line" : 110,
              "key.doc.name" : "method(param:)",
              "key.doc.type" : "Function",
              "key.doclength" : 34,
              "key.docoffset" : 2146,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>method<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>param<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 53,
              "key.name" : "method(param:)",
              "key.namelength" : 18,
              "key.nameoffset" : 2203,
              "key.offset" : 2198,
              "key.overrides" : [
                {
                  "key.usr" : "s:14SpmSwiftModule10ABaseClassC6method5paramSSSi_tF"
                }
              ],
              "key.parsed_declaration" : "public override func method(param: Int) -> String",
              "key.parsed_scope.end" : 112,
              "key.parsed_scope.start" : 110,
              "key.typename" : "<T, Q where Q : Sequence> (ADerivedClass<T, Q>) -> (Int) -> String",
              "key.typeusr" : "$s5paramSSSi_tcD",
              "key.usr" : "s:14SpmSwiftModule13ADerivedClassC6method5paramSSSi_tF"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.public",
              "key.annotated_decl" : "<Declaration>public func generic(param: <Type usr=\"s:14SpmSwiftModule13ADerivedClassC1Txmfp\">T<\/Type>) -&gt; <Type usr=\"s:14SpmSwiftModule13ADerivedClassC1Txmfp\">T<\/Type><\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute.public",
                  "key.length" : 6,
                  "key.offset" : 2255
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "public func generic(param: T) -> T",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "func "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "generic"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "param"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": T) -> T"
                }
              ],
              "key.bodylength" : 20,
              "key.bodyoffset" : 2291,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>generic<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>param<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14SpmSwiftModule13ADerivedClassC1Txmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SpmSwiftModule13ADerivedClassC1Txmfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 50,
              "key.name" : "generic(param:)",
              "key.namelength" : 17,
              "key.nameoffset" : 2267,
              "key.offset" : 2262,
              "key.parsed_declaration" : "public func generic(param: T) -> T",
              "key.parsed_scope.end" : 116,
              "key.parsed_scope.start" : 114,
              "key.typename" : "<T, Q where Q : Sequence> (ADerivedClass<T, Q>) -> (T) -> T",
              "key.typeusr" : "$s5paramxx_tcD",
              "key.usr" : "s:14SpmSwiftModule13ADerivedClassC7generic5paramxx_tF"
            }
          ],
          "key.typename" : "ADerivedClass<T, Q>.Type",
          "key.typeusr" : "$s14SpmSwiftModule13ADerivedClassCyxq_GmD",
          "key.usr" : "s:14SpmSwiftModule13ADerivedClassC"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.internal",
          "key.annotated_decl" : "<Declaration>@propertyWrapper struct Nop<\/Declaration>",
          "key.attributes" : [
            {
              "key.attribute" : "source.decl.attribute.propertyWrapper",
              "key.length" : 16,
              "key.offset" : 2316
            }
          ],
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "@propertyWrapper\nstruct Nop",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "struct "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "Nop"
            }
          ],
          "key.bodylength" : 111,
          "key.bodyoffset" : 2345,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Nop<\/decl.name><\/decl.struct>",
          "key.kind" : "source.lang.swift.decl.struct",
          "key.length" : 124,
          "key.name" : "Nop",
          "key.namelength" : 3,
          "key.nameoffset" : 2340,
          "key.offset" : 2333,
          "key.parsed_declaration" : "struct Nop",
          "key.parsed_scope.end" : 126,
          "key.parsed_scope.start" : 120,
          "key.substructure" : [
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>var wrappedValue: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "var wrappedValue: String",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "wrappedValue"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 24,
              "key.name" : "wrappedValue",
              "key.namelength" : 12,
              "key.nameoffset" : 2354,
              "key.offset" : 2350,
              "key.parsed_declaration" : "var wrappedValue: String",
              "key.parsed_scope.end" : 121,
              "key.parsed_scope.start" : 121,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "String",
              "key.typeusr" : "$sSSD",
              "key.usr" : "s:14SpmSwiftModule3NopV12wrappedValueSSvp"
            },
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>init(wrappedValue: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "init(wrappedValue: String)",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "init"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "("
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "wrappedValue"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String)"
                }
              ],
              "key.bodylength" : 46,
              "key.bodyoffset" : 2408,
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
              "key.kind" : "source.lang.swift.decl.function.method.instance",
              "key.length" : 75,
              "key.name" : "init(wrappedValue:)",
              "key.namelength" : 26,
              "key.nameoffset" : 2380,
              "key.offset" : 2380,
              "key.parsed_declaration" : "init(wrappedValue: String)",
              "key.parsed_scope.end" : 125,
              "key.parsed_scope.start" : 123,
              "key.typename" : "(Nop.Type) -> (String) -> Nop",
              "key.typeusr" : "$s12wrappedValue14SpmSwiftModule3NopVSS_tcD",
              "key.usr" : "s:14SpmSwiftModule3NopV12wrappedValueACSS_tcfc"
            }
          ],
          "key.typename" : "Nop.Type",
          "key.typeusr" : "$s14SpmSwiftModule3NopVmD",
          "key.usr" : "s:14SpmSwiftModule3NopV"
        },
        {
          "key.accessibility" : "source.lang.swift.accessibility.internal",
          "key.annotated_decl" : "<Declaration>struct PropertyWrapperClient<\/Declaration>",
          "key.bb.documentation" : {
            "key.bb.abstract" : {
              "en" : "See `@Nop`."
            },
            "key.bb.doc_source" : "docComment"
          },
          "key.bb.is_override" : false,
          "key.bb.swift_declaration" : "struct PropertyWrapperClient",
          "key.bb.swift_deprecated_everywhere" : false,
          "key.bb.swift_name_pieces" : [
            {
              "key.bb.name_piece_is_name" : false,
              "key.bb.name_piece_text" : "struct "
            },
            {
              "key.bb.name_piece_is_name" : true,
              "key.bb.name_piece_text" : "PropertyWrapperClient"
            }
          ],
          "key.bodylength" : 28,
          "key.bodyoffset" : 2505,
          "key.doc.column" : 8,
          "key.doc.comment" : "See `@Nop`.",
          "key.doc.declaration" : "struct PropertyWrapperClient",
          "key.doc.file" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.doc.full_as_xml" : "<Class file=\"\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift\" line=\"129\" column=\"8\"><Name>PropertyWrapperClient<\/Name><USR>s:14SpmSwiftModule21PropertyWrapperClientV<\/USR><Declaration>struct PropertyWrapperClient<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>@Nop<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
          "key.doc.line" : 129,
          "key.doc.name" : "PropertyWrapperClient",
          "key.doc.type" : "Class",
          "key.doclength" : 16,
          "key.docoffset" : 2459,
          "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
          "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>PropertyWrapperClient<\/decl.name><\/decl.struct>",
          "key.kind" : "source.lang.swift.decl.struct",
          "key.length" : 59,
          "key.name" : "PropertyWrapperClient",
          "key.namelength" : 21,
          "key.nameoffset" : 2482,
          "key.offset" : 2475,
          "key.parsed_declaration" : "struct PropertyWrapperClient",
          "key.parsed_scope.end" : 132,
          "key.parsed_scope.start" : 129,
          "key.substructure" : [
            {
              "key.accessibility" : "source.lang.swift.accessibility.internal",
              "key.annotated_decl" : "<Declaration>@<Type usr=\"s:14SpmSwiftModule3NopV\">Nop<\/Type> var v: <Type usr=\"s:SS\">String<\/Type> { get set }<\/Declaration>",
              "key.attributes" : [
                {
                  "key.attribute" : "source.decl.attribute._custom",
                  "key.length" : 4,
                  "key.offset" : 2510
                }
              ],
              "key.bb.is_override" : false,
              "key.bb.swift_declaration" : "@Nop\nvar v: String { get set }",
              "key.bb.swift_deprecated_everywhere" : false,
              "key.bb.swift_name_pieces" : [
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : "var "
                },
                {
                  "key.bb.name_piece_is_name" : true,
                  "key.bb.name_piece_text" : "v"
                },
                {
                  "key.bb.name_piece_is_name" : false,
                  "key.bb.name_piece_text" : ": String"
                }
              ],
              "key.filepath" : "\/Users\/johnf\/project\/J2\/Tests\/BebopTests\/Fixtures\/SpmSwiftPackage\/Sources\/SpmSwiftModule\/SpmSwiftModule.swift",
              "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.struct usr=\"s:14SpmSwiftModule3NopV\">Nop<\/ref.struct><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>v<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
              "key.kind" : "source.lang.swift.decl.var.instance",
              "key.length" : 13,
              "key.name" : "v",
              "key.namelength" : 1,
              "key.nameoffset" : 2523,
              "key.offset" : 2519,
              "key.parsed_declaration" : "var v: String",
              "key.parsed_scope.end" : 131,
              "key.parsed_scope.start" : 131,
              "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
              "key.typename" : "String",
              "key.typeusr" : "$sSSD",
              "key.usr" : "s:14SpmSwiftModule21PropertyWrapperClientV1vSSvp"
            }
          ],
          "key.typename" : "PropertyWrapperClient.Type",
          "key.typeusr" : "$s14SpmSwiftModule21PropertyWrapperClientVmD",
          "key.usr" : "s:14SpmSwiftModule21PropertyWrapperClientV"
        }
      ]
    }
  }
]
